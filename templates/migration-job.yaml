apiVersion: batch/v1
kind: Job
metadata:
  name: sre-app-migrate
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-failed
spec:
  template:
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z sre-db-postgresql 5432; do sleep 2; done']
      containers:
        - name: migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          command: ["/bin/sh", "-c", "./sre_technical_challenge eval 'Application.ensure_all_started(:sre_technical_challenge); Ecto.Migrator.run(SreTechnicalChallenge.Repo, :up, all: true)'"]
          env:
            - name: DATABASE_URL
              value: "{{ .Values.env.DATABASE_URL }}"
            - name: PHX_HOST
              value: "{{ .Values.env.PHX_HOST }}"
            - name: SECRET_KEY_BASE
              value: "{{ .Values.env.SECRET_KEY_BASE }}"
            - name: POOL_SIZE
              value: "{{ .Values.env.POOL_SIZE }}"
            - name: PORT
              value: "{{ .Values.env.PORT }}"